name: Build and Push Docker Image

on:
  push:
    branches:
      - develop
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - develop

permissions:
  contents: read
  packages: write

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        id: tests
        run: |
          go test ./... -coverprofile=coverage.out | tee /tmp/test.log
          go tool cover -func=coverage.out | tee -a /tmp/test.log

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out

      - name: Add test summary
        if: always()
        run: |
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          cat /tmp/test.log >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"

      - name: Determine image tags
        id: tags
        run: |
          SHORT_SHA=$(git rev-parse --short=7 "$GITHUB_SHA")
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            TAGS="rc-${SHORT_SHA}"
          elif [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            TAGS="develop"
          elif [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            TAGS="main"
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG_NAME="${GITHUB_REF#refs/tags/}"
            TAGS="main,${TAG_NAME}"
          else
            TAGS=""
          fi
          echo "tags=${TAGS}" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/visualizeq/jira-discord-webhook:${{ steps.tags.outputs.tags }}
